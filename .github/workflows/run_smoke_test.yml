name: Run Smoke Test 
on: 
  workflow_call:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened]
    branches:
      - "main"
  pull_request_review:
    types: [submitted]
  push:
    paths:
      - ".github/workflows/run_smoke_test.yml"
    branches:
      - "main"
      - "*smoke*"

env:
  GWS_SUBJECT_EMAIL: ${{ secrets.GWS_SUBJECT_EMAIL }}
  GWS_GITHUB_AUTOMATION_CREDS: ${{ secrets.GWS_GITHUB_AUTOMATION_CREDS }}

jobs:
  smoke-test:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python: [3.8, 3.12]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: ./.github/actions/setup-python
        with:
          python-version: ${{ matrix.python }}
          cache-dependency-path: "requirements.txt"
      
      - name: Setup Windows dependencies
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ./.github/actions/setup-windows-dependencies
        with:
          operating-system: "windows"
          opa-version: "0.60.0"
      
      - name: Setup macOS dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        uses: ./.github/actions/setup-windows-dependencies
        with:
          operating-system: "macos"
          opa-version: "0.60.0"

      - name: Execute ScubaGoggles and check for correct output
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          # Setup credentials for service account
          Set-Content -Path credentials.json -Value $env:GWS_GITHUB_AUTOMATION_CREDS
          pytest -s ./Testing/Functional/SmokeTests/ --subjectemail="$env:GWS_SUBJECT_EMAIL"
      
      - name: Execute ScubaGoggles and check for correct output
        if: ${{ matrix.os == 'macos-latest'  }}
        run: |
          echo "in second step"
          
          # Give OPA executable execute permissions
          chmod +x opa_darwin_amd64

          # Setup credentials for service account
          echo $env:GWS_GITHUB_AUTOMATION_CREDS
          echo $env:GWS_GITHUB_AUTOMATION_CREDS >> credentials.json
          cat credentials.json
          #pytest -s ./Testing/Functional/SmokeTests/ --subjectemail="$env:GWS_SUBJECT_EMAIL"

  #smoke-test-windows:
  #  if: false
  #  name: Smoke Test for Windows
  #  runs-on: windows-latest 
  #  steps:
  #    - name: Checkout Repository
  #      uses: actions/checkout@v4
#
  #    - name: Setup Python
  #      uses: ./.github/actions/setup-python
  #      with:
  #        python-version: "3.12"
  #        cache-dependency-path: "requirements.txt"
  #    
  #    - name: Setup dependencies
  #      uses: ./.github/actions/setup-windows-dependencies
  #      with:
  #        operating-system: "windows"
  #        opa-version: "0.60.0"
#
  #    - name: Execute ScubaGoggles and check for correct output
  #      run: |
  #        # Setup credentials for service account
  #        Set-Content -Path credentials.json -Value $env:GWS_GITHUB_AUTOMATION_CREDS
  #        pytest -s ./Testing/Functional/SmokeTests/ --subjectemail="$env:GWS_SUBJECT_EMAIL"
  #
  #smoke-test-macos:
  #  name: Smoke Test for MacOS
  #  runs-on: macos-latest
  #  #needs: smoke-test-windows
  #  steps:
  #    - name: Checkout Repository
  #      uses: actions/checkout@v4
#
  #    - name: Setup Python
  #      uses: ./.github/actions/setup-python
  #      with:
  #        python-version: "3.12"
  #        cache-dependency-path: "requirements.txt"
  #    
  #    - name: Setup dependencies
  #      uses: ./.github/actions/setup-macos-dependencies
  #      with:
  #        operating-system: "macos"
  #        opa-version: "0.60.0"
  #    
  #    - name: Execute ScubaGoggles and check for correct output
  #      run: |
  #        echo "in second step"
  #        
  #        # Give OPA executable execute permissions
  #        chmod +x opa_darwin_amd64
#
  #        # Setup credentials for service account
  #        echo $env:GWS_GITHUB_AUTOMATION_CREDS
  #        echo $env:GWS_GITHUB_AUTOMATION_CREDS >> credentials.json
  #        cat credentials.json
  #        #pytest -s ./Testing/Functional/SmokeTests/ --subjectemail="$env:GWS_SUBJECT_EMAIL"
